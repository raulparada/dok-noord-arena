<head>
    <script src="./tailwindv4.js"></script>
    <script src="./htmx2.0.4.min.js"></script>
    <meta name="htmx-config" content='{"selfRequestsOnly":false}'>
</head>

<body
    class="
    grid grid-cols-1
    content-center
    justify-center
    justify-items-center
    items-center
    bg-stone-100
    font-system-ui">
    <table class="table-auto w-3/4">
        <p class="text-xl font-bold">
            Matches
        </p>
        <tbody>
            {% set color_mapping =
            {
            'black': '&#9899;',
            'white': '&#9898;',
            'blue': '&#128309;',
            'red': '&#128308',
            'green': '&#128994'
            }
            %}
            {% for match in MATCHES %}
            <tr>
                <td class="px-1 font-bold text-gray-400">{{ match.date }}</td>
                <td class="px-1 text-right {{ 'font-bold' if match.outcome == '1' else '' }}">{{ match.team_1 }}</td>
                <td class="px-3 text-center w-25 text-gray-500">{{color_mapping[match.team_1.color or 'black']}} vs
                    {{color_mapping[match.team_2.color or 'white']}}Ô∏è
                </td>
                <td class="px-1 text-left {{ 'font-bold' if match.outcome == '2' else '' }}">{{ match.team_2 }}</td>
                {% if match.highlights_id %}
                <td class="px-1 font-medium text-blue-600 dark:text-blue-500 hover:underline"> <a
                        href="https://app.myplay.com/app/game/{{match.highlights_id}}/highlights">highlights</a></td>
                </td>
                {% endif %}
            </tr>
            {% endfor %}
        </tbody>
    </table>
    <details
        class="grid grid-cols-1 content-center justify-center justify-items-center items-center group cursor-pointer"
        id="matchmaking">
        <summary class="text-blue-500 group-open:text-black">Start new...</summary>
        <form>
            <textarea
                placeholder="Tuesday DD/MM @20:00
1.‚Å† Player 1
2.‚Å† Player 2‚Å†
3.‚Å† Player 3
4.‚Å† Player 4‚Å†
5.‚Å† Player 5‚Å†
6.‚Å† Player 6‚Å†
7.‚Å† Player 7‚Å†
8.‚Å† Player 8‚Å†
9.‚Å† Player 9‚Å†
10.‚Å† Player 10"
                class="relative resize-none h-70 w-60 border-2 border-blue-500"
                name="data"
                hx-swap="delete"
                hx-target="#matchmaking"
                hx-confirm="Submit match?"
                hx-ext="dispatchjson"
                hx-post="{{ DISPATCH_URL }}"
                data-event-type="matchmaking"
                data-redirect="true"></textarea>
        </form>
    </details>
    <br>

    {# Players #}
    <table>
        <p class="text-xl font-bold">
            Players
        </p>
        <thead>
            <tr>
                <th></th> <!-- name -->
                <th>‚õπÔ∏è‚Äç‚ôÇÔ∏è</th>
                <th>W</th>
                <th>L</th>
                <th>üèÜ</th>
                <th>‚≠êÔ∏è</th>
            </tr>
        </thead>
        <tbody>
            {% for player in PLAYERS.values()|sort(attribute='stats.wins,alias', reverse=true) %}
            <tr>
                <th class="text-right px-2 font-semibold">
                    {{player.alias }}</th>
                <td class="px-1">{{player.stats.played}}</td>
                <td class="px-1">{{player.stats.wins}}</td>
                <td class="px-1">{{player.stats.losses}}</td>
                <td class="px-1">{{player.stats.tournament_wins}}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    <script>
        let CI_TOKEN
        fetch("ci_public_token")
            .then((res) => res.text())
            .then(text => CI_TOKEN = text)
        // https://www.submitjson.com/blog/htmx-post-json
        htmx.defineExtension('dispatchjson', {
            onEvent: function (name, evt) {
                console.log("htmx evt", evt)
                if (name === "htmx:configRequest") {
                    evt.detail.headers = {
                        "Content-Type": "application/json", // not required yet correct.
                        "Accept": "application/vnd.github+json",
                        "X-GitHub-Api-Version": "2022-11-28",
                        "Authorization": `Bearer ${CI_TOKEN}`
                    }
                }
                if (name === "htmx:xhr:loadend") {
                    if (evt.detail.elt.dataset.redirect === "true") {
                        // Redirect to repo actions overview filtering to event type.
                        window.location = `{{REPO_URL}}/actions?query=event%3A${evt.detail.elt.dataset.eventType}`
                    }
                }
            },
            encodeParameters: function (xhr, parameters, elt) {
                console.log("encode", xhr, parameters, elt)
                xhr.overrideMimeType('text/json')
                const body = {
                    // https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#repository_dispatch
                    // https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#create-a-repository-dispatch-event
                    client_payload: parameters,
                    event_type: elt.dataset.eventType,
                }
                return (JSON.stringify(body))
            }
        })
    </script>
</body>
